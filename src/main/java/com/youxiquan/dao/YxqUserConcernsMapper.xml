<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youxiquan.dao.YxqUserConcernsMapper">
  <resultMap id="BaseResultMap" type="com.youxiquan.pojo.YxqUserConcerns">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="from_id" jdbcType="BIGINT" property="fromId" />
    <result column="to_id" jdbcType="BIGINT" property="toId" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.youxiquan.pojo.YxqUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="headimgurl" jdbcType="VARCHAR" property="headimgurl" />
    <result column="info" jdbcType="VARCHAR" property="info" />
  </resultMap>
  <resultMap id="BaseResultMap3" type="com.youxiquan.dto.UserConcernsShowDto">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <collection property="fromUser" ofType="com.youxiquan.pojo.YxqUser">
      <id column="fromId" jdbcType="BIGINT" property="id" />
      <result column="fromUsername" jdbcType="VARCHAR" property="username" />
    </collection>
    <collection property="toUser" ofType="com.youxiquan.pojo.YxqUser">
      <id column="toId" jdbcType="BIGINT" property="id" />
      <result column="toUsername" jdbcType="VARCHAR" property="username" />
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, from_id, to_id, createTime
  </sql>
  <select id="selectByExample" parameterType="com.youxiquan.pojo.YxqUserConcernsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from yxq_user_concerns
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yxq_user_concerns
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from yxq_user_concerns
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.youxiquan.pojo.YxqUserConcernsExample">
    delete from yxq_user_concerns
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.youxiquan.pojo.YxqUserConcerns">
    insert into yxq_user_concerns (id, from_id, to_id,
      createTime)
    values (#{id,jdbcType=BIGINT}, #{fromId,jdbcType=BIGINT}, #{toId,jdbcType=BIGINT},
      #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.youxiquan.pojo.YxqUserConcerns">
    insert into yxq_user_concerns
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
      <if test="toId != null">
        to_id,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=BIGINT},
      </if>
      <if test="toId != null">
        #{toId,jdbcType=BIGINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.youxiquan.pojo.YxqUserConcernsExample" resultType="java.lang.Long">
    select count(*) from yxq_user_concerns
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update yxq_user_concerns
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fromId != null">
        from_id = #{record.fromId,jdbcType=BIGINT},
      </if>
      <if test="record.toId != null">
        to_id = #{record.toId,jdbcType=BIGINT},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update yxq_user_concerns
    set id = #{record.id,jdbcType=BIGINT},
    from_id = #{record.fromId,jdbcType=BIGINT},
    to_id = #{record.toId,jdbcType=BIGINT},
    createTime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.youxiquan.pojo.YxqUserConcerns">
    update yxq_user_concerns
    <set>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=BIGINT},
      </if>
      <if test="toId != null">
        to_id = #{toId,jdbcType=BIGINT},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youxiquan.pojo.YxqUserConcerns">
    update yxq_user_concerns
    set from_id = #{fromId,jdbcType=BIGINT},
      to_id = #{toId,jdbcType=BIGINT},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByFromId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yxq_user_concerns
    where from_id = #{fromId,jdbcType=BIGINT}
  </select>
  <select id="getUserConcernsInfoByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap2">
    select b.id,b.username,b.info,b.headimgurl
    from yxq_user_concerns as a,yxq_user as b
    where
    a.to_id = b.id
    and a.from_id = #{fromId,jdbcType=BIGINT}
  </select>
  <delete id="deleteConcernsByFromIdAndToId" parameterType="java.lang.Long">
    delete from yxq_user_concerns
    where
      from_id = #{fromId}
      and
      to_id = #{toId}
  </delete>
  <select id="getCountByToId" parameterType="java.lang.Long" resultType="java.lang.Integer">
    SELECT COUNT(*)
    FROM yxq_user_concerns
    WHERE
      to_id = #{toId,jdbcType=BIGINT}
    GROUP BY to_id
  </select>
  <select id="selectByUserConcernsInfo" parameterType="string" resultMap="BaseResultMap3">
    SELECT a.id,a.createTime,b.id AS fromId,b.username AS fromUsername,c.id AS toId,c.username AS toUsername
    FROM yxq_user_concerns AS a,yxq_user AS b,yxq_user AS c
    WHERE a.from_id = b.id AND a.to_id = c.id
    <if test="search != null and search != ''">
      and
      (a.to_id = #{searchId}
      OR
       c.username LIKE #{search})
    </if>
    ORDER BY
    ${orderCol}
    ${orderDir}
  </select>
  <select id="getBeConcernUserBy" parameterType="java.lang.Long" resultType="com.youxiquan.dto.UserInfoDto">
    SELECT b.id,b.nickname,b.username,b.headimgurl,b.info
    FROM yxq_user_concerns a
    left join yxq_user b on a.from_id = b.id
    WHERE
      a.to_id = #{userId}
  </select>
</mapper>